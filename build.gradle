plugins {
	id 'org.springframework.boot' version '2.2.2.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'org.asciidoctor.convert' version '1.5.9.2'
	id 'java'
	id 'idea'
}

group = 'com.nofaterock.restdocs'
version = '0.0.1-SNAPSHOT'

sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5'
	implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"

	runtimeOnly 'com.h2database:h2'
	runtimeOnly "org.springframework.boot:spring-boot-devtools"

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}

	asciidoctor 'org.springframework.restdocs:spring-restdocs-asciidoctor'
	testCompile 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

idea {
	module {
		excludeDirs = [file(".idea"), file(".gradle"), file(".file")]
		outputDir = file("${buildDir}/classes/main")
		testOutputDir = file("${buildDir}/classes/test")
	}
}

// restdocs
ext {
	snippetsDir = file('build/generated-snippets')
}

test {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

asciidoctor {
	attributes 'snippets': snippetsDir
	inputs.dir snippetsDir
	dependsOn test
}

bootJar {
	dependsOn asciidoctor
	from("${asciidoctor.outputDir}/html5") {
		into 'static/docs'
	}
}
